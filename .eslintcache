[{"F:\\Web-Development\\my-project\\user-form\\src\\index.js":"1","F:\\Web-Development\\my-project\\user-form\\src\\reportWebVitals.js":"2","F:\\Web-Development\\my-project\\user-form\\src\\App.js":"3","F:\\Web-Development\\my-project\\user-form\\src\\Component\\Home\\Home.js":"4","F:\\Web-Development\\my-project\\user-form\\src\\Component\\UserForm\\UserForm.js":"5","F:\\Web-Development\\my-project\\user-form\\src\\Component\\Header\\Header.js":"6","F:\\Web-Development\\my-project\\user-form\\src\\Component\\UserDetails\\UserDetails.js":"7","F:\\Web-Development\\my-project\\user-form\\src\\Firebase.Config.js":"8","F:\\Web-Development\\my-project\\user-form\\src\\Component\\Register\\Register.js":"9","F:\\Web-Development\\my-project\\user-form\\src\\Component\\PrivateRoute\\PrivateRoute.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1475,"mtime":1608016006137,"results":"14","hashOfConfig":"12"},{"size":355,"mtime":1607567642523,"results":"15","hashOfConfig":"12"},{"size":4836,"mtime":1608015768465,"results":"16","hashOfConfig":"12"},{"size":4765,"mtime":1608016299480,"results":"17","hashOfConfig":"12"},{"size":1290,"mtime":1607573546554,"results":"18","hashOfConfig":"12"},{"size":455,"mtime":1607565318291,"results":"19","hashOfConfig":"12"},{"size":4715,"mtime":1608015818425,"results":"20","hashOfConfig":"12"},{"size":660,"mtime":1608015122752,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1vb2yq0",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"F:\\Web-Development\\my-project\\user-form\\src\\index.js",[],["45","46"],"F:\\Web-Development\\my-project\\user-form\\src\\reportWebVitals.js",[],"F:\\Web-Development\\my-project\\user-form\\src\\App.js",[],"F:\\Web-Development\\my-project\\user-form\\src\\Component\\Home\\Home.js",[],"F:\\Web-Development\\my-project\\user-form\\src\\Component\\UserForm\\UserForm.js",[],"F:\\Web-Development\\my-project\\user-form\\src\\Component\\Header\\Header.js",["47","48","49","50","51"],"F:\\Web-Development\\my-project\\user-form\\src\\Component\\UserDetails\\UserDetails.js",[],"F:\\Web-Development\\my-project\\user-form\\src\\Firebase.Config.js",[],"F:\\Web-Development\\my-project\\user-form\\src\\Component\\Register\\Register.js",["52"],"import React, { useState , useContext } from 'react';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/analytics\";\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { UserContext } from '../../App';\r\n\r\n\r\n\r\n\r\nfirebase.analytics();\r\n\r\n\r\nconst Register = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n\r\n    const [newUser, setNewUser] = useState(false);\r\n\r\n    const [userUp, setUserUp] = useState({\r\n        isSignIn : false,\r\n        email: '',\r\n        photo: '',\r\n        password: '',\r\n        name: '',\r\n        error: '',\r\n        success: false\r\n    })\r\n\r\n    \r\n    let history = useHistory();\r\n    let location = useLocation();\r\n\r\n    let { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n    const handleClick =  (e)=>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        \r\n        let isFieldValid = true;\r\n        if(name === 'email'){\r\n            isFieldValid = /\\S+@\\S+\\.\\S+/.test(value);\r\n        }\r\n        if(name === 'password'){\r\n            const isValidLength = value.length >= 6;\r\n            const isValidPass = /\\d{1}/.test(value)\r\n            isFieldValid = isValidLength && isValidPass;\r\n        }\r\n        if(isFieldValid){\r\n            const userInfo = {...userUp};\r\n            userInfo[name] = value;\r\n            setUserUp(userInfo);\r\n        }\r\n    }\r\n\r\n\r\n    const handleSubmit  = (e)=>{\r\n        if(newUser && userUp.email && userUp.password){\r\n            firebase.auth().createUserWithEmailAndPassword(userUp.email, userUp.password)\r\n            .then(res => {\r\n                const userErrorInfo = {...userUp};\r\n                userErrorInfo.error = '';\r\n                userErrorInfo.success = true;\r\n                setUserUp(userErrorInfo);\r\n                updateUser(userUp.name);\r\n                history.replace(from);\r\n            })\r\n            .catch(error => {\r\n                const userErrorInfo = {...userUp};\r\n                userErrorInfo.success = false;\r\n                userErrorInfo.error = error.message;\r\n                setUserUp(userErrorInfo);\r\n\r\n            })\r\n        }\r\n        if(!newUser && userUp.email && userUp.password ){\r\n            firebase.auth().signInWithEmailAndPassword(userUp.email, userUp.password)\r\n            .then((res) => {\r\n                const userErrorInfo = {...userUp};\r\n                userErrorInfo.error = '';\r\n                userErrorInfo.success = true;\r\n                setUserUp(userErrorInfo);\r\n                setLoggedInUser(userErrorInfo);\r\n                history.replace(from);\r\n                console.log('user sign in successfully', res);\r\n            })\r\n            .catch((error) => {\r\n                const userErrorInfo = {...userUp};\r\n                userErrorInfo.success = false;\r\n                userErrorInfo.error = error.message;\r\n                setUserUp(userErrorInfo);\r\n            });\r\n        }\r\n        e.target.reset();\r\n        e.preventDefault();\r\n    }\r\n\r\n    const updateUser = name =>{\r\n        var user = firebase.auth().currentUser;\r\n\r\n        user.updateProfile({\r\n            displayName: name\r\n            })\r\n            .then(() => {\r\n                console.log('successfully submitted');\r\n            })\r\n            .catch(error=> {\r\n                console.log(error);\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            \r\n            <h1>Fill the sign up form </h1>\r\n            <p>Name: {userUp.name}</p>\r\n            <p>Email: {userUp.email}</p>\r\n            <p>Password: {userUp.password}</p>\r\n            <input type=\"checkbox\" name=\"newUser\" id=\"\" onChange={()=> setNewUser(!newUser)}/>\r\n            <label htmlFor=\"newUser\">Sign up for new user</label>\r\n            <form onSubmit={handleSubmit}>\r\n                {newUser &&\r\n                    <input type=\"text\" name=\"name\" id=\"text\" onBlur={handleClick} placeholder='Your Name' required/>\r\n                }\r\n                <br/>\r\n                <input type=\"text\" name=\"email\" id=\"email\" onBlur={handleClick} placeholder='Your Email' required/>\r\n                <br/>\r\n                <input type=\"password\" name=\"password\" id=\"password\" onBlur={handleClick} placeholder='Your Password' title='6 character with 1 numeric value' required/>\r\n                <br/>\r\n                <input type=\"submit\" value={newUser ? 'Sign Up' : 'Sign In'}/>\r\n            </form>\r\n            <p style={{color:'red'}}>{userUp.error}</p>\r\n            {\r\n                userUp.success && <p style={{color:'green'}}>Your account {newUser ? 'created' : 'logged in'} successfully</p>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;","F:\\Web-Development\\my-project\\user-form\\src\\Component\\PrivateRoute\\PrivateRoute.js",["53"],"import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { UserContext } from '../../App';\r\n\r\nconst  PrivateRoute =({ children, ...rest }) =>{\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    \r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n            loggedInUser.email ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/register\",\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\nexport default PrivateRoute;",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":17,"column":12,"nodeType":"60","messageId":"61","endLine":17,"endColumn":24},{"ruleId":"58","severity":1,"message":"62","line":26,"column":9,"nodeType":"60","messageId":"61","endLine":26,"endColumn":16},{"ruleId":"58","severity":1,"message":"63","line":29,"column":11,"nodeType":"60","messageId":"61","endLine":29,"endColumn":15},{"ruleId":"58","severity":1,"message":"64","line":57,"column":19,"nodeType":"60","messageId":"61","endLine":57,"endColumn":28},{"ruleId":"58","severity":1,"message":"65","line":60,"column":19,"nodeType":"60","messageId":"61","endLine":60,"endColumn":29},{"ruleId":"58","severity":1,"message":"59","line":15,"column":12,"nodeType":"60","messageId":"61","endLine":15,"endColumn":24},{"ruleId":"58","severity":1,"message":"66","line":6,"column":26,"nodeType":"60","messageId":"61","endLine":6,"endColumn":41},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'loggedInUser' is assigned a value but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'from' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'credential' is assigned a value but never used.","'setLoggedInUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]